package musicshop;

import musicshop.tablemodel.*;
import javax.swing.JOptionPane;
import java.util.List;

/**
 *
 * @author Daniel
 */
public class MusicShop extends javax.swing.JFrame {

    /**
     * Creates new form MusicShopUI
     */
    public MusicShop() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryPanel1 = new javax.swing.JPanel();
        queryLabel1 = new javax.swing.JLabel();
        genreTextField = new javax.swing.JTextField();
        enterGenreButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        queryPanel2 = new javax.swing.JPanel();
        queryLabel2 = new javax.swing.JLabel();
        inventoryQueryButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        queryPanel3 = new javax.swing.JPanel();
        queryLabel3 = new javax.swing.JLabel();
        genreStockQueryButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Music Shop Database Interface");

        queryPanel1.setMaximumSize(new java.awt.Dimension(32767, 45));

        queryLabel1.setText("Search albums  by genre (leave blank to retrieve all albums)");
        queryLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        genreTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        enterGenreButton.setText("Enter");
        enterGenreButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        enterGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterGenreButtonActionPerformed(evt);
            }
        });

        insertButton.setText("Insert ");
        insertButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout queryPanel1Layout = new javax.swing.GroupLayout(queryPanel1);
        queryPanel1.setLayout(queryPanel1Layout);
        queryPanel1Layout.setHorizontalGroup(
            queryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(queryLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterGenreButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insertButton)
                .addContainerGap())
        );
        queryPanel1Layout.setVerticalGroup(
            queryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(queryPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryLabel1)
                    .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterGenreButton)
                    .addComponent(insertButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(displayTable);

        queryPanel2.setMaximumSize(new java.awt.Dimension(32767, 45));

        queryLabel2.setText("Retrieve information about the inventory of company");
        queryLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        inventoryQueryButton.setText("Retrieve Info");
        inventoryQueryButton.setToolTipText("");
        inventoryQueryButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inventoryQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryQueryButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout queryPanel2Layout = new javax.swing.GroupLayout(queryPanel2);
        queryPanel2.setLayout(queryPanel2Layout);
        queryPanel2Layout.setHorizontalGroup(
            queryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(queryLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inventoryQueryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addContainerGap())
        );
        queryPanel2Layout.setVerticalGroup(
            queryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(queryPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryLabel2)
                    .addComponent(inventoryQueryButton)
                    .addComponent(updateButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        queryPanel3.setMaximumSize(new java.awt.Dimension(32767, 45));

        queryLabel3.setText("Retrieve amount of stock of each genre for the whole company");
        queryLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        genreStockQueryButton.setText("Retrieve Info");
        genreStockQueryButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        genreStockQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreStockQueryButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout queryPanel3Layout = new javax.swing.GroupLayout(queryPanel3);
        queryPanel3.setLayout(queryPanel3Layout);
        queryPanel3Layout.setHorizontalGroup(
            queryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(queryLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(genreStockQueryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );
        queryPanel3Layout.setVerticalGroup(
            queryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(queryPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(queryPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queryLabel3)
                    .addComponent(genreStockQueryButton)
                    .addComponent(deleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(queryPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(queryPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(queryPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(queryPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(queryPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(queryPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterGenreButtonActionPerformed
        try {
            String genre = genreTextField.getText();

            List<Album> albums;

            MusicShopDAO dao = new MusicShopDAO();
            
            if (genre != null && genre.trim().length() > 0) {
                    albums = dao.searchAlbums(genre);
            } else {
                    albums = dao.getAllAlbums();
            }

            // create the model and update the "table"
            AlbumTableModel model = new AlbumTableModel(albums);

            displayTable.setModel(model);

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_enterGenreButtonActionPerformed

    private void inventoryQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryQueryButtonActionPerformed
        try {
            List<Inventory> inventories;

            MusicShopDAO dao = new MusicShopDAO();
            
            inventories = dao.retrieveInventoryValues();
            
            // create the model and update the "table"
            InventoryValueTableModel model = new InventoryValueTableModel(inventories);

            displayTable.setModel(model);

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_inventoryQueryButtonActionPerformed

    private void genreStockQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreStockQueryButtonActionPerformed
        try {
            List<GenreStock> genreStocks;

            MusicShopDAO dao = new MusicShopDAO();
            
            genreStocks = dao.retrieveGenreStocks();
            
            // create the model and update the "table"
            GenreStockTableModel model = new GenreStockTableModel(genreStocks);

            displayTable.setModel(model);

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_genreStockQueryButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        try {
            /* Querying the stock of each genre before and after running this 
            // will provide proof of it working
            */
            MusicShopDAO dao = new MusicShopDAO();
            dao.insertExample();

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            /* Querying the stock of each genre before and after running this 
            // will provide proof of it working
            */
            MusicShopDAO dao = new MusicShopDAO();
            dao.updateExample();

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            /* Querying the stock of each genre before and after running this 
            // will provide proof of it working
            */
            MusicShopDAO dao = new MusicShopDAO();
            dao.deleteExample();

        } catch (Exception exc) {
                JOptionPane.showMessageDialog(MusicShop.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusicShop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable displayTable;
    private javax.swing.JButton enterGenreButton;
    private javax.swing.JButton genreStockQueryButton;
    private javax.swing.JTextField genreTextField;
    private javax.swing.JButton insertButton;
    private javax.swing.JButton inventoryQueryButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel queryLabel1;
    private javax.swing.JLabel queryLabel2;
    private javax.swing.JLabel queryLabel3;
    private javax.swing.JPanel queryPanel1;
    private javax.swing.JPanel queryPanel2;
    private javax.swing.JPanel queryPanel3;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
